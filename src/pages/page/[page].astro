---
import Card from '@components/Card.astro';
import Date from '@components/Date.astro';
import Paginator from '@components/Paginator.astro';
import { CACHE_CONTROL } from '@const/headers';
import { pageSchema } from '@const/schemas';
import Layout from '@layouts/Layout.astro';
import supabase, { type Site } from '@lib/supabase';
import { User } from 'lucide-preact';
import { z } from 'zod';

const params = z.object({ page: pageSchema }).safeParse(Astro.params);
if (!params.success) return Astro.redirect('/page/1');

const { data, error } = await supabase
  .from('post')
  .select('*, site(*)')
  .order('pub_date', { ascending: false })
  .range((params.data.page - 1) * 30, (params.data.page - 1) * 30 + 29);
if (error) return Astro.redirect('/');
if (!data.length) return Astro.redirect('/page/1');

Astro.response.headers.set('Cache-Control', CACHE_CONTROL);

const posts = data.map((post) => ({ ...post, site: post.site as Site }));
---

<Layout>
  <div class="mt-fluid-4 flex flex-col gap-fluid-2">
    <h1 class="mb-1 font-fancy -tracking-[0.1em] text-3xl">posts</h1>
    <section>
      <ul class="grid grid-cols-1 gap-6 md:grid-cols-2">
        {
          posts.map((post) => (
            <li>
              <Card
                href={`/sites/${post.site.slug}/${post.slug}`}
                title={post.title}
              >
                <p slot="first" class="flex items-center gap-2">
                  <User class="h-4 w-4 shrink-0" />
                  <span>{post.site.name}</span>
                </p>
                <p slot="second">
                  <Date>{post.pub_date}</Date>
                </p>
              </Card>
            </li>
          ))
        }
      </ul>
    </section>
    <section>
      <Paginator
        current={params.data.page}
        isFirst={params.data.page === 1}
        isLast={posts.length < 30}
      />
    </section>
  </div>
</Layout>
